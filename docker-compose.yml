---
services:
  flood:
    build:
      context: flood
      args:
        NODE_ENV: production
        version: master
    environment:
      - "FLOOD_BASE_URI=${FLOOD_BASE_URI:-/}"
      - "FLOOD_SECRET=${FLOOD_SECRET}"
      - "RTORRENT_SCGI_HOST=${RTORRENT_SCGI_HOST:-127.0.0.1}"
      - "RTORRENT_SCGI_PORT=${RTORRENT_SCGI_PORT:-5000}"
      - "RTORRENT_SOCK=${RTORRENT_SOCK:-false}"
      - "FLOOD_ENABLE_SSL=${FLOOD_ENABLE_SSL:-false}"
    labels:
      - ovh.dispenser.flood
    network_mode: "host"
    # ports:
    #   - "3000:3000"
    restart: unless-stopped
    volumes:
      - "${MOUNT}/docker/data/flood:/data"
  syncthing:
    environment:
      - "PGID=${PGID}"
      - "PUID=${PUID}"
      - "TZ=${TZ}"
    image: linuxserver/syncthing
    labels:
      - ovh.dispenser.syncthing
    ports:
      - 8384:8384
      - 22000:22000
      - 21027:21027/udp
    restart: unless-stopped
    volumes:
      - "${MOUNT}/docker/data/syncthing:/config"
      - "${MOUNT}/library/movies:/mnt/library/movies"
      - "${MOUNT}/data/movies:/mnt/data/movies"
  # radarr:
  #   container_name: radarr
  #   environment:
  #     - "PGID=${PGID}"
  #     - "PUID=${PUID}"
  #     - "TZ=${TZ}"
  #   image: linuxserver/radarr
  #   labels:
  #     ovh.dispenser.service: "radarr"
  #   ports:
  #     - "127.0.0.1:7878:7878"
  #   restart: unless-stopped
  #   volumes:
  #     - "${MOUNT}/docker/data/radarr:/config"
  #     - "${MOUNT}/data/movies:/downloads"
  #     - "${MOUNT}/library/movies:/movies"
  nzbget:
    environment:
      - "PUID=${PUID}"
      - "PGID=${PGID}"
      - "TZ=${TZ}"
    image: "linuxserver/nzbget"
    labels:
      ovh.dispenser.service: "nzbget"
    ports:
      - "6789:6789"
    restart: "unless-stopped"
    volumes:
      - "${MOUNT}/docker/data/nzbget:/config"
      - "${MOUNT}/nzbget:/downloads"
  deluge:
    build:
      context: deluge
      args:
        deluge_version: 1.3.15
        libtorrent_version: 1.0.16
    environment:
      - "PGID=${PGID}"
      - "PUID=${PUID}"
      - "TZ=${TZ}"
      - "UMASK_SET=002"
    labels:
      ovh.dispenser.service: "deluge"
    ports:
      - "127.0.0.1:8112:8112"
      # it's suggested to use an ssh tunnel to connect to the daemon over the internet
      - "127.0.0.1:58846:58846"
      # both the ranges below can be used for incoming or outgoing ports
      - "58926:58946"
      - "58926:58946/udp"
    restart: unless-stopped
    volumes:
      - "${MOUNT}/docker/data/deluge:/config"
      - "${MOUNT}/data:/downloads"
  couch:
    environment:
      - "PGID=${PGID}"
      - "PUID=${PUID}"
      - "TZ=${TZ}"
    image: linuxserver/couchpotato
    labels:
      - ovh.dispenser.couchpotato
    ports:
      - 127.0.0.1:5050:5050
    restart: unless-stopped
    volumes:
      - "${MOUNT}/docker/data/couch:/config"
      - "${MOUNT}/data/movies:/downloads"
      - "${MOUNT}/library/movies:/movies"
  jackett:
    environment:
      - "PGID=${PGID}"
      - "PUID=${PUID}"
      - "TZ=${TZ}"
    image: linuxserver/jackett
    labels:
      - ovh.dispenser.jackett
    ports:
      - 127.0.0.1:9117:9117
    restart: unless-stopped
    volumes:
      - "${MOUNT}/docker/data/jackett:/config"
      # - "${MOUNT}/blackhole:/downloads"
  filebot:
    build:
      context: filebot
    environment:
      - "PGID=${PGID}"
      - "PUID=${PUID}"
      - "TZ=${TZ}"
    labels:
      ovh.dispenser.filebot: watcher
  znc:
    container_name: znc
    environment:
      - "PUID=${PUID}"
      - "PGID=${PGID}"
      - "TZ=${TZ}"
    image: linuxserver/znc
    ports:
      - "6501:6501"
    restart: unless-stopped
    volumes:
      - "${MOUNT}/docker/data/filebot:/config"
      # - "${MOUNT}/data:/media"
#   nextcloud:
#    environment:
#      - "PUID=${UID}"
#      - "PGID=${GID}"
#    image: linuxserver/nextcloud
#    ports:
#      - 4433:443
#    restart: unless-stopped
#    volumes:
#      - "${MOUNT}/nextcloud/data:/data"
#      - "${MOUNT}/nextcloud/config:/config"
#      - "/etc/letsencrypt/live/${DOMAIN}:/config/keys"
      - "${MOUNT}/.znc-docker:/config"
version: '3.5'
