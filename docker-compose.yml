---
services:
  flood:
    build:
      context: flood
    environment:
      - "FLOOD_BASE_URI=${FLOOD_BASE_URI:-/}"
      - "FLOOD_SECRET=${FLOOD_SECRET}"
      - "RTORRENT_SCGI_HOST=${RTORRENT_SCGI_HOST:-127.0.0.1}"
      - "RTORRENT_SCGI_PORT=${RTORRENT_SCGI_PORT:-5000}"
      - "RTORRENT_SOCK=${RTORRENT_SOCK:-false}"
      - "FLOOD_ENABLE_SSL=${FLOOD_ENABLE_SSL:-false}"
    labels:
      - ovh.dispenser.flood
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - "${MOUNT}/docker/data/flood:/data"
  syncthing:
    environment:
      - "PGID=${PGID}"
      - "PUID=${PUID}"
      - "TZ=${TZ}"
    image: linuxserver/syncthing
    labels:
      - ovh.dispenser.syncthing
    ports:
      - 8384:8384
      - 22000:22000
      - 21027:21027/udp
    restart: unless-stopped
    volumes:
      - "${MOUNT}/docker/data/syncthing:/config"
      - "${MOUNT}/library/movies:/mnt/movies"
  radarr:
    environment:
      - "PGID=${PGID}"
      - "PUID=${PUID}"
      - "TZ=${TZ}"
    image: linuxserver/radarr
    labels:
      - ovh.dispenser.radarr
    ports:
      - 127.0.0.1:7878:7878
    restart: unless-stopped
    volumes:
      - "${MOUNT}/docker/data/radarr:/config"
      - "${MOUNT}/data/movies:/downloads"
      - "${MOUNT}/library/movies:/movies"
  deluge:
    build:
      context: deluge
    environment:
      - "PGID=${PGID}"
      - "PUID=${PUID}"
      - "TZ=${TZ}"
      - "UMASK_SET=002"
    labels:
      - ovh.dispenser.deluge
    ports:
      - "8112:8112"
      - "58846:58846"
      - "58946:58946"
      - "58946:58946/udp"
    restart: unless-stopped
    volumes:
      - "${MOUNT}/docker/data/deluge:/config"
      - "${MOUNT}/data:/downloads"
  couch:
    environment:
      - "PGID=${PGID}"
      - "PUID=${PUID}"
      - "TZ=${TZ}"
    image: linuxserver/couchpotato
    labels:
      - ovh.dispenser.couchpotato
    ports:
      - 127.0.0.1:5050:5050
    restart: unless-stopped
    volumes:
      - "${MOUNT}/docker/data/couch:/config"
      - "${MOUNT}/data/movies:/downloads"
      - "${MOUNT}/library/movies:/movies"
  jackett:
    environment:
      - "PGID=${PGID}"
      - "PUID=${PUID}"
      - "TZ=${TZ}"
    image: linuxserver/jackett
    labels:
      - ovh.dispenser.jackett
    ports:
      - 127.0.0.1:9117:9117
    restart: unless-stopped
    volumes:
      - "${MOUNT}/docker/data/jackett:/config"
      # - "${MOUNT}/blackhole:/downloads"
  filebot:
    build:
      context: filebot
    environment:
      - "PGID=${PGID}"
      - "PUID=${PUID}"
      - "TZ=${TZ}"
    labels:
      ovh.dispenser.filebot: watcher
    restart: unless-stopped
    volumes:
      - "${MOUNT}/docker/data/filebot:/config"
      # - "${MOUNT}/data:/media"
#   nextcloud:
#    environment:
#      - "PUID=${UID}"
#      - "PGID=${GID}"
#    image: linuxserver/nextcloud
#    ports:
#      - 4433:443
#    restart: unless-stopped
#    volumes:
#      - "${MOUNT}/nextcloud/data:/data"
#      - "${MOUNT}/nextcloud/config:/config"
#      - "/etc/letsencrypt/live/${DOMAIN}:/config/keys"
#  znc:
#    container_name: znc
#    environment:
#      - "PUID=${UID}"
#      - "PGID=${GID}"
#      - "TZ=${TZ}"
#    image: linuxserver/znc
#    ports:
#      - 6501:6501
#    restart: unless-stopped
#    volumes:
#      - "${MOUNT}/.znc-docker:/config"
version: '3.3'
